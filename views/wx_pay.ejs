<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>微信支付</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.css">
</head>
<body class="container">
    <!-- 1 用于验证openid -->
    <!-- <h1>微信公众账号支付</h1>
    <p><%= openid %></p> -->
    
    <!-- 2 用于验证支付 -->
    <h1 class="text-center">微信支付</h1>
    <div class="form-group">
        <label for="txtPrice">价格</label>
        <input type="text" class="form-control" id="txtPrice" placeholder="请输入价格">
    </div>
    <button class="btn btn-primary" onclick="subOrder(event)">下单</button>
    <hr>
    <script src="https://cdn.jsdelivr.net/npm/axios@0.19.2/dist/axios.js"></script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.6.0.js"></script>
    <script>
        /*
        app.js
        res.render("wx_pay.ejs",{
            appid,
            timestamp,
            nonceStr,
            signResult
        })
        */
        function subOrder(event){
             event.target.disabled = true
             const  fee = document.getElementById('txtPrice').value
    
             axios.post('/api/v1/wechat/pay',{
                fee,
                openid:"<%= openid %>",
                tradeType:"JSAPI"
            }).then(res=>{
                wx.chooseWXPay({
                     timestamp: 0, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符
                     nonceStr: res.data.nonceStr, // 支付签名随机串，不长于 32 位
                     package: res.data.prepay_id, // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\*\*\*）
                     signType: "MD5", // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
                     paySign: res.data.paySign, // 支付签名
                     success: function (res) {
                           // 支付成功后的回调函数
                           alert("此处可以做后续操作")
                     }
                });
            }).catch(err=>{
                console.log(err)
            })
        }
        
        wx.config({
            debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: "<%= appId %>", // 必填，公众号的唯一标识
            timestamp: "<%= timestamp %>", // 必填，生成签名的时间戳
            nonceStr: "<%= nonceStr %>", // 必填，生成签名的随机串
            signature: "<%= signResult %>",// 必填，签名
            jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表
        });
        wx.ready(function(){
          // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
        });
        wx.error(function(res){
             // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
        });
    </script>
</body>
</html>